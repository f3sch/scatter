#+TITLE: Readme
#+AUTHOR: Felix Schlepper

* General
Benchmarked on _rome_.
Built with g++.


* Plots
=Local Data should always be faster to process.=
=I compared to the prevoius Commit 2ed9825.=
[[file:serialBench.png]]
[[file:serialNTStore.png]]
[[file:stlBench.png]]
[[file:tbbPresortBench.png]]
[[file:tbbSimpleBench.png]]

There is no real improvement visible using cache_aligned allocators.
They probably already aligned anyways.


[[file:tbbSimplePart.png]]

I compared using a dedicated partitioner with TBB like this:
#+BEGIN_SRC cpp
static tbb::affinity_partitioner aff_p;
tbb::parallel_for(..., aff_p);
#+END_SRC
However, there is no visible improvement doing this.
Most surprisingly, using no partitioner, which defaults to auto_partitioner, is worse than using auto_partitioner explicitly.
My guess is, that the data was shuffled in favor of the older data from Commit 2ed9825.
But this is not confirmed...

* Notes
- the data is now cache aligned
- there are benchmarks for local data
- serialSimd crashed without avx512 instructions
- serialUnrolledLoop throws with wrong results
- for both the core crashes are included
- I canceled the *ScanBench as they are ridiculously slow

#  LocalWords:  partitioner
